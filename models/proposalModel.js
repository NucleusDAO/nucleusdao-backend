const mongoose = require('mongoose');

/**
 * @swagger
 * components:
 *   schemas:
 *     Proposal:
 *       type: object
 *       required:
 *         - id
 *         - proposer
 *         - proposalType
 *         - description
 *         - startTime
 *         - endTime
 *         - daoName
 *         - daoId
 *       properties:
 *         id:
 *           type: string
 *           description: Unique identifier for the proposal, usually generated by the system.
 *         proposer:
 *           type: string
 *           description: Address of the user who made the proposal.
 *         proposalType:
 *           type: string
 *           description: Type of the proposal, categorizing the proposal's purpose.
 *         description:
 *           type: string
 *           description: Detailed description of what the proposal entails.
 *         value:
 *           type: number
 *           description: Monetary value or weight involved in the proposal.
 *         target:
 *           type: string
 *           description: The target address or identifier affected by the proposal.
 *         info:
 *           type: object
 *           additionalProperties: true
 *           description: Any additional information related to the proposal in JSON format.
 *         startTime:
 *           type: integer
 *           format: int64
 *           description: Timestamp for when the proposal starts.
 *         endTime:
 *           type: integer
 *           format: int64
 *           description: Timestamp for when the proposal ends.
 *         votesFor:
 *           type: number
 *           description: Count of votes in favor of the proposal.
 *         votesAgainst:
 *           type: number
 *           description: Count of votes against the proposal.
 *         isExecuted:
 *           type: boolean
 *           description: Status to indicate whether the proposal has been executed.
 *         votes:
 *           type: array
 *           items:
 *             type: object
 *           description: Array of vote objects, detailing each vote cast in the proposal.
 *         daoName:
 *           type: string
 *           description: Name of the DAO to which the proposal belongs.
 *         daoId:
 *           type: string
 *           description: Identifier of the DAO to which the proposal is linked.
 *         hasVoted:
 *           type: object
 *           additionalProperties:
 *             type: boolean
 *           description: Map of addresses to boolean values indicating whether the address has voted.
 *       example:
 *         id: "proposal123"
 *         proposer: "0xABC123"
 *         proposalType: "Funding"
 *         description: "Proposal for funding a new community project."
 *         value: 5000
 *         target: "0xDEF456"
 *         info: { details: "More information about the proposal." }
 *         startTime: 1609459200
 *         endTime: 1609545600
 *         votesFor: 150
 *         votesAgainst: 10
 *         isExecuted: false
 *         votes: [{ account: "0xGHI789", support: true}]
 *         daoName: "Genesis DAO"
 *         daoId: "dao789"
 *         hasVoted: { "0xABC123": true, "0xDEF456": false }
 */

const proposalSchema = new mongoose.Schema({
  id: String,
  proposer: String,
  proposalType: String,
  description: String,
  value: Number,
  target: String,
  info: Object,
  startTime: Number,
  endTime: Number,
  votesFor: Number,
  votesAgainst: Number,
  isExecuted: Boolean,
  votes: [Object],
  daoName: String,
  daoId: String,
  hasVoted: Map,
});

module.exports = mongoose.model('Proposal', proposalSchema);
